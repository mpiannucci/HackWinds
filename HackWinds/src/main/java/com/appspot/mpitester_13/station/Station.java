/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-11-07 19:12:12 UTC)
 * on 2017-11-12 at 01:28:45 UTC 
 * Modify at your own risk.
 */

package com.appspot.mpitester_13.station;

/**
 * Service definition for Station (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link StationRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Station extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.23.0 of the station library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "http://mpitester-13.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "station/v1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Station(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Station(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "closest_station".
   *
   * This request holds the parameters needed by the station server.  After setting any optional
   * parameters, call the {@link ClosestStation#execute()} method to invoke the remote operation.
   *
   * @param active
   * @param count [default: 1]
   * @param latitude
   * @param longitude
   * @param buoyType [default: BUOY]
   * @return the request
   */
  public ClosestStation closestStation(java.lang.Boolean active, java.lang.Long count, java.lang.Double latitude, java.lang.Double longitude, java.lang.String buoyType) throws java.io.IOException {
    ClosestStation result = new ClosestStation(active, count, latitude, longitude, buoyType);
    initialize(result);
    return result;
  }

  public class ClosestStation extends StationRequest<com.appspot.mpitester_13.station.model.ApiApiMessagesStationMessage> {

    private static final String REST_PATH = "stations/closest";

    /**
     * Create a request for the method "closest_station".
     *
     * This request holds the parameters needed by the the station server.  After setting any optional
     * parameters, call the {@link ClosestStation#execute()} method to invoke the remote operation.
     * <p> {@link ClosestStation#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param active
     * @param count [default: 1]
     * @param latitude
     * @param longitude
     * @param buoyType [default: BUOY]
     * @since 1.13
     */
    protected ClosestStation(java.lang.Boolean active, java.lang.Long count, java.lang.Double latitude, java.lang.Double longitude, java.lang.String buoyType) {
      super(Station.this, "GET", REST_PATH, null, com.appspot.mpitester_13.station.model.ApiApiMessagesStationMessage.class);
      this.active = com.google.api.client.util.Preconditions.checkNotNull(active, "Required parameter active must be specified.");
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.buoyType = com.google.api.client.util.Preconditions.checkNotNull(buoyType, "Required parameter buoyType must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ClosestStation setAlt(java.lang.String alt) {
      return (ClosestStation) super.setAlt(alt);
    }

    @Override
    public ClosestStation setFields(java.lang.String fields) {
      return (ClosestStation) super.setFields(fields);
    }

    @Override
    public ClosestStation setKey(java.lang.String key) {
      return (ClosestStation) super.setKey(key);
    }

    @Override
    public ClosestStation setOauthToken(java.lang.String oauthToken) {
      return (ClosestStation) super.setOauthToken(oauthToken);
    }

    @Override
    public ClosestStation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ClosestStation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ClosestStation setQuotaUser(java.lang.String quotaUser) {
      return (ClosestStation) super.setQuotaUser(quotaUser);
    }

    @Override
    public ClosestStation setUserIp(java.lang.String userIp) {
      return (ClosestStation) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean active;

    /**

     */
    public java.lang.Boolean getActive() {
      return active;
    }

    public ClosestStation setActive(java.lang.Boolean active) {
      this.active = active;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long count;

    /**
   [ default: 1]
   [

     */
    public java.lang.Long getCount() {
      return count;
    }

    public ClosestStation setCount(java.lang.Long count) {
      this.count = count;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public ClosestStation setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public ClosestStation setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key("buoy_type")
    private java.lang.String buoyType;

    /**
   [ default: BUOY]
   [

     */
    public java.lang.String getBuoyType() {
      return buoyType;
    }

    public ClosestStation setBuoyType(java.lang.String buoyType) {
      this.buoyType = buoyType;
      return this;
    }

    @Override
    public ClosestStation set(String parameterName, Object value) {
      return (ClosestStation) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "data".
   *
   * This request holds the parameters needed by the station server.  After setting any optional
   * parameters, call the {@link Data#execute()} method to invoke the remote operation.
   *
   * @param units [default: METRIC]
   * @param stationId
   * @return the request
   */
  public Data data(java.lang.String units, java.lang.String stationId) throws java.io.IOException {
    Data result = new Data(units, stationId);
    initialize(result);
    return result;
  }

  public class Data extends StationRequest<com.appspot.mpitester_13.station.model.ApiApiMessagesDataMessage> {

    private static final String REST_PATH = "data";

    /**
     * Create a request for the method "data".
     *
     * This request holds the parameters needed by the the station server.  After setting any optional
     * parameters, call the {@link Data#execute()} method to invoke the remote operation. <p> {@link
     * Data#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param units [default: METRIC]
     * @param stationId
     * @since 1.13
     */
    protected Data(java.lang.String units, java.lang.String stationId) {
      super(Station.this, "GET", REST_PATH, null, com.appspot.mpitester_13.station.model.ApiApiMessagesDataMessage.class);
      this.units = com.google.api.client.util.Preconditions.checkNotNull(units, "Required parameter units must be specified.");
      this.stationId = com.google.api.client.util.Preconditions.checkNotNull(stationId, "Required parameter stationId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Data setAlt(java.lang.String alt) {
      return (Data) super.setAlt(alt);
    }

    @Override
    public Data setFields(java.lang.String fields) {
      return (Data) super.setFields(fields);
    }

    @Override
    public Data setKey(java.lang.String key) {
      return (Data) super.setKey(key);
    }

    @Override
    public Data setOauthToken(java.lang.String oauthToken) {
      return (Data) super.setOauthToken(oauthToken);
    }

    @Override
    public Data setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Data) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Data setQuotaUser(java.lang.String quotaUser) {
      return (Data) super.setQuotaUser(quotaUser);
    }

    @Override
    public Data setUserIp(java.lang.String userIp) {
      return (Data) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String units;

    /**
   [ default: METRIC]
   [

     */
    public java.lang.String getUnits() {
      return units;
    }

    public Data setUnits(java.lang.String units) {
      this.units = units;
      return this;
    }

    @com.google.api.client.util.Key("station_id")
    private java.lang.String stationId;

    /**

     */
    public java.lang.String getStationId() {
      return stationId;
    }

    public Data setStationId(java.lang.String stationId) {
      this.stationId = stationId;
      return this;
    }

    @com.google.api.client.util.Key("when.time_zone_offset")
    private java.lang.Long whenTimeZoneOffset;

    /**

     */
    public java.lang.Long getWhenTimeZoneOffset() {
      return whenTimeZoneOffset;
    }

    public Data setWhenTimeZoneOffset(java.lang.Long whenTimeZoneOffset) {
      this.whenTimeZoneOffset = whenTimeZoneOffset;
      return this;
    }

    @com.google.api.client.util.Key("data_type")
    private java.lang.String dataType;

    /**

     */
    public java.lang.String getDataType() {
      return dataType;
    }

    public Data setDataType(java.lang.String dataType) {
      this.dataType = dataType;
      return this;
    }

    @com.google.api.client.util.Key("when.milliseconds")
    private java.lang.Long whenMilliseconds;

    /**

     */
    public java.lang.Long getWhenMilliseconds() {
      return whenMilliseconds;
    }

    public Data setWhenMilliseconds(java.lang.Long whenMilliseconds) {
      this.whenMilliseconds = whenMilliseconds;
      return this;
    }

    @Override
    public Data set(String parameterName, Object value) {
      return (Data) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "info".
   *
   * This request holds the parameters needed by the station server.  After setting any optional
   * parameters, call the {@link Info#execute()} method to invoke the remote operation.
   *
   * @param stationId
   * @return the request
   */
  public Info info(java.lang.String stationId) throws java.io.IOException {
    Info result = new Info(stationId);
    initialize(result);
    return result;
  }

  public class Info extends StationRequest<com.appspot.mpitester_13.station.model.ApiApiMessagesStationMessage> {

    private static final String REST_PATH = "info";

    /**
     * Create a request for the method "info".
     *
     * This request holds the parameters needed by the the station server.  After setting any optional
     * parameters, call the {@link Info#execute()} method to invoke the remote operation. <p> {@link
     * Info#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param stationId
     * @since 1.13
     */
    protected Info(java.lang.String stationId) {
      super(Station.this, "GET", REST_PATH, null, com.appspot.mpitester_13.station.model.ApiApiMessagesStationMessage.class);
      this.stationId = com.google.api.client.util.Preconditions.checkNotNull(stationId, "Required parameter stationId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Info setAlt(java.lang.String alt) {
      return (Info) super.setAlt(alt);
    }

    @Override
    public Info setFields(java.lang.String fields) {
      return (Info) super.setFields(fields);
    }

    @Override
    public Info setKey(java.lang.String key) {
      return (Info) super.setKey(key);
    }

    @Override
    public Info setOauthToken(java.lang.String oauthToken) {
      return (Info) super.setOauthToken(oauthToken);
    }

    @Override
    public Info setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Info) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Info setQuotaUser(java.lang.String quotaUser) {
      return (Info) super.setQuotaUser(quotaUser);
    }

    @Override
    public Info setUserIp(java.lang.String userIp) {
      return (Info) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("station_id")
    private java.lang.String stationId;

    /**

     */
    public java.lang.String getStationId() {
      return stationId;
    }

    public Info setStationId(java.lang.String stationId) {
      this.stationId = stationId;
      return this;
    }

    @Override
    public Info set(String parameterName, Object value) {
      return (Info) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "plot".
   *
   * This request holds the parameters needed by the station server.  After setting any optional
   * parameters, call the {@link Plot#execute()} method to invoke the remote operation.
   *
   * @param plotType
   * @param stationId
   * @return the request
   */
  public Plot plot(java.lang.String plotType, java.lang.String stationId) throws java.io.IOException {
    Plot result = new Plot(plotType, stationId);
    initialize(result);
    return result;
  }

  public class Plot extends StationRequest<com.appspot.mpitester_13.station.model.ApiApiMessagesPlotMessage> {

    private static final String REST_PATH = "plot";

    /**
     * Create a request for the method "plot".
     *
     * This request holds the parameters needed by the the station server.  After setting any optional
     * parameters, call the {@link Plot#execute()} method to invoke the remote operation. <p> {@link
     * Plot#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param plotType
     * @param stationId
     * @since 1.13
     */
    protected Plot(java.lang.String plotType, java.lang.String stationId) {
      super(Station.this, "GET", REST_PATH, null, com.appspot.mpitester_13.station.model.ApiApiMessagesPlotMessage.class);
      this.plotType = com.google.api.client.util.Preconditions.checkNotNull(plotType, "Required parameter plotType must be specified.");
      this.stationId = com.google.api.client.util.Preconditions.checkNotNull(stationId, "Required parameter stationId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Plot setAlt(java.lang.String alt) {
      return (Plot) super.setAlt(alt);
    }

    @Override
    public Plot setFields(java.lang.String fields) {
      return (Plot) super.setFields(fields);
    }

    @Override
    public Plot setKey(java.lang.String key) {
      return (Plot) super.setKey(key);
    }

    @Override
    public Plot setOauthToken(java.lang.String oauthToken) {
      return (Plot) super.setOauthToken(oauthToken);
    }

    @Override
    public Plot setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Plot) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Plot setQuotaUser(java.lang.String quotaUser) {
      return (Plot) super.setQuotaUser(quotaUser);
    }

    @Override
    public Plot setUserIp(java.lang.String userIp) {
      return (Plot) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("plot_type")
    private java.lang.String plotType;

    /**

     */
    public java.lang.String getPlotType() {
      return plotType;
    }

    public Plot setPlotType(java.lang.String plotType) {
      this.plotType = plotType;
      return this;
    }

    @com.google.api.client.util.Key("station_id")
    private java.lang.String stationId;

    /**

     */
    public java.lang.String getStationId() {
      return stationId;
    }

    public Plot setStationId(java.lang.String stationId) {
      this.stationId = stationId;
      return this;
    }

    @Override
    public Plot set(String parameterName, Object value) {
      return (Plot) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "stations".
   *
   * This request holds the parameters needed by the station server.  After setting any optional
   * parameters, call the {@link Stations#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Stations stations() throws java.io.IOException {
    Stations result = new Stations();
    initialize(result);
    return result;
  }

  public class Stations extends StationRequest<com.appspot.mpitester_13.station.model.ApiApiMessagesStationsMessage> {

    private static final String REST_PATH = "stations";

    /**
     * Create a request for the method "stations".
     *
     * This request holds the parameters needed by the the station server.  After setting any optional
     * parameters, call the {@link Stations#execute()} method to invoke the remote operation. <p>
     * {@link
     * Stations#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Stations() {
      super(Station.this, "GET", REST_PATH, null, com.appspot.mpitester_13.station.model.ApiApiMessagesStationsMessage.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Stations setAlt(java.lang.String alt) {
      return (Stations) super.setAlt(alt);
    }

    @Override
    public Stations setFields(java.lang.String fields) {
      return (Stations) super.setFields(fields);
    }

    @Override
    public Stations setKey(java.lang.String key) {
      return (Stations) super.setKey(key);
    }

    @Override
    public Stations setOauthToken(java.lang.String oauthToken) {
      return (Stations) super.setOauthToken(oauthToken);
    }

    @Override
    public Stations setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Stations) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Stations setQuotaUser(java.lang.String quotaUser) {
      return (Stations) super.setQuotaUser(quotaUser);
    }

    @Override
    public Stations setUserIp(java.lang.String userIp) {
      return (Stations) super.setUserIp(userIp);
    }

    @Override
    public Stations set(String parameterName, Object value) {
      return (Stations) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "unit_labels".
   *
   * This request holds the parameters needed by the station server.  After setting any optional
   * parameters, call the {@link UnitLabels#execute()} method to invoke the remote operation.
   *
   * @param units
   * @param abbrev [default: true]
   * @return the request
   */
  public UnitLabels unitLabels(java.lang.String units, java.lang.Boolean abbrev) throws java.io.IOException {
    UnitLabels result = new UnitLabels(units, abbrev);
    initialize(result);
    return result;
  }

  public class UnitLabels extends StationRequest<com.appspot.mpitester_13.station.model.ApiApiMessagesUnitLabelMessage> {

    private static final String REST_PATH = "unit_labels";

    /**
     * Create a request for the method "unit_labels".
     *
     * This request holds the parameters needed by the the station server.  After setting any optional
     * parameters, call the {@link UnitLabels#execute()} method to invoke the remote operation. <p>
     * {@link
     * UnitLabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param units
     * @param abbrev [default: true]
     * @since 1.13
     */
    protected UnitLabels(java.lang.String units, java.lang.Boolean abbrev) {
      super(Station.this, "GET", REST_PATH, null, com.appspot.mpitester_13.station.model.ApiApiMessagesUnitLabelMessage.class);
      this.units = com.google.api.client.util.Preconditions.checkNotNull(units, "Required parameter units must be specified.");
      this.abbrev = com.google.api.client.util.Preconditions.checkNotNull(abbrev, "Required parameter abbrev must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public UnitLabels setAlt(java.lang.String alt) {
      return (UnitLabels) super.setAlt(alt);
    }

    @Override
    public UnitLabels setFields(java.lang.String fields) {
      return (UnitLabels) super.setFields(fields);
    }

    @Override
    public UnitLabels setKey(java.lang.String key) {
      return (UnitLabels) super.setKey(key);
    }

    @Override
    public UnitLabels setOauthToken(java.lang.String oauthToken) {
      return (UnitLabels) super.setOauthToken(oauthToken);
    }

    @Override
    public UnitLabels setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UnitLabels) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UnitLabels setQuotaUser(java.lang.String quotaUser) {
      return (UnitLabels) super.setQuotaUser(quotaUser);
    }

    @Override
    public UnitLabels setUserIp(java.lang.String userIp) {
      return (UnitLabels) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String units;

    /**

     */
    public java.lang.String getUnits() {
      return units;
    }

    public UnitLabels setUnits(java.lang.String units) {
      this.units = units;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean abbrev;

    /**
   [ default: true]
   [

     */
    public java.lang.Boolean getAbbrev() {
      return abbrev;
    }

    public UnitLabels setAbbrev(java.lang.Boolean abbrev) {
      this.abbrev = abbrev;
      return this;
    }

    /**
     * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
     *
     * <p>
     * Boolean properties can have four possible values:
     * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
     * or {@link Boolean#FALSE}.
     * </p>
     *
     * <p>
     * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
     * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
     * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
     * </p>
     *
     * <p>
     *
     * </p>
     */
    public boolean isAbbrev() {
      if (abbrev == null || abbrev == com.google.api.client.util.Data.NULL_BOOLEAN) {
        return true;
      }
      return abbrev;
    }

    @Override
    public UnitLabels set(String parameterName, Object value) {
      return (UnitLabels) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Station}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Station}. */
    @Override
    public Station build() {
      return new Station(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link StationRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setStationRequestInitializer(
        StationRequestInitializer stationRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(stationRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
