/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-04-06 17:52:19 UTC)
 * on 2018-05-07 at 00:11:22 UTC 
 * Modify at your own risk.
 */

package com.appspot.hackwinds.hackwinds.model;

/**
 * Model definition for MessagesUnitsUnitLabelMessage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the hackwinds. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MessagesUnitsUnitLabelMessage extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<MessagesUnitsMeasurementLabelMessage> measurements;

  static {
    // hack to force ProGuard to consider MessagesUnitsMeasurementLabelMessage used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(MessagesUnitsMeasurementLabelMessage.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String unit;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<MessagesUnitsMeasurementLabelMessage> getMeasurements() {
    return measurements;
  }

  /**
   * @param measurements measurements or {@code null} for none
   */
  public MessagesUnitsUnitLabelMessage setMeasurements(java.util.List<MessagesUnitsMeasurementLabelMessage> measurements) {
    this.measurements = measurements;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUnit() {
    return unit;
  }

  /**
   * @param unit unit or {@code null} for none
   */
  public MessagesUnitsUnitLabelMessage setUnit(java.lang.String unit) {
    this.unit = unit;
    return this;
  }

  @Override
  public MessagesUnitsUnitLabelMessage set(String fieldName, Object value) {
    return (MessagesUnitsUnitLabelMessage) super.set(fieldName, value);
  }

  @Override
  public MessagesUnitsUnitLabelMessage clone() {
    return (MessagesUnitsUnitLabelMessage) super.clone();
  }

}
